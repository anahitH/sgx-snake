/* snake.edl */

enclave {

    from "TrustedLibrary/Libc.edl" import *;
    from "TrustedLibrary/Libcxx.edl" import ecall_exception, ecall_map;

    typedef enum { LEFT=0, RIGHT, UP, DOWN, LEFT_TURN, RIGHT_TURN, QUIT, NUM_KEYS } direction_t;

    typedef struct {
	    int row, col;
    } snake_segment_t;

    typedef struct {
	    unsigned int    speed;
	    direction_t     dir;

	    int             len;
	    snake_segment_t body[100];
    } snake_t;

    typedef struct {
	    int level;
	    int score;
	    int high_score;
	    int gold;
	    int obstacles;

	    char grid[MAXROW][MAXCOL];
    } screen_t;


    trusted {
	public void ecall_start_game();

	private void ecall_speed_up(screen_t* screen, snake_t* snake);

	private void ecall_setup_level_on_start(screen_t* screen, snake_t* snake);
	
	private void ecall_level_up(screen_t* screen, snake_t* snake);

	private void ecall_update_screen_for_level(screen_t* screen, snake_t* snake, int level);
	
	private void ecall_fill_grid_blanks(screen_t* screen);

	private void ecall_fill_grid_objects(screen_t* screen);
	
	private vois ecall_setup_snake_body(snake_t* snake, int level);

	private void ecall_setup_level(screen_t* screen, snake_t* snake, int level);

	private void ecall_determine_snake_direction(snake_t* snake, char keys[], char key);

	private void ecall_do_move(snake_t* snake);
	
	private void ecall_move(snake_t* snake, char keys[], char key);

	private void ecall_collide(const snake_t *const snake);

	private void ecall_collide_walls(const snake_t *const snake);

	private void ecall_collide_objects(const snake_t *const snake, const screen_t *const screen, char object);

	private void ecall_collide_self(const snake_t *const snake);

	private void ecall_collision(const snake_t *const snake, const screen_t *const screen);
	
	private int ecall_eat_gold(snake_t* snake, screen_t* screen);
    };

    untrusted {
	public void ocall_get_char([out] char* key);

	public void ocall_goto(int x, int y);

	public void ocall_set_usec_delay(unisgned int delay);

	public void ocall_print_game_over();
	
	public void ocall_print_another_game();

	public void ocall_blank_coordinates(int x, int y);

	public void ocall_display_snake([user_check] const snake_t *const snake);

	public void ocall_show_score([user_check] const screen_t *const screen);
	
	public void ocall_setup_playing_board([user_check] const screen_t *const screen);
    };

};
